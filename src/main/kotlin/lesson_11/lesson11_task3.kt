package ru.fedorova.spring.lesson_11

fun main() {

    val room: Room = Room(
        cover = "Картинка комнаты",
        name = "Комната любителей фэнтези",
        users = mutableListOf(),
    )

    val user1: User3 = User3(
        name = "Маша",
        avatar = "Картинка аватара Маши",
        status = "Разговаривает",
    )

    val user2: User3 = User3(
        name = "Петя",
        avatar = "Картинка аватара Пети",
        status = "Микрофон выключен",
    )

    room.addUser(user1)
    room.addUser(user2)

    room.updateUserStatus("Маша", "Пользователь заглушен")
    room.updateUserStatus("Петя", "Разговаривает")

}


//Прокачиваем абстрактное мышление. Задача на проектирование сущностей для упрощенной версии приложения социальной сети, в которой общаются только голосом.
//Требуется описать сущности и имитировать действия методами.
//
//Функционал одного из модулей будет такой. Есть лента, в которой отображаются “комнаты” для общения по интересам. В карточке “комнаты” отображается:
//
//- обложка;
//- название;
//- список участников — отображаются в виде аватарок. При долгом нажатии на аватар подсветится его никнейм.
//Рядом с аватаркой отображается текстовый бейдж с одним из возможных статусов говорящего: “разговаривает”, “микрофон выключен”, “пользователь заглушен”.
//
//Класс должен содержать методы:
//
//– добавления участника (принимает объект участника и сохраняет в свойство комнаты);
//– обновления статуса (принимает имя пользователя и новый статус).
//
//После проектирования создай объект комнаты с произвольными данными.